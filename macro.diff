diff --git a/libcpp/macro.c b/libcpp/macro.c
index 2573f31..349dc26 100644
--- a/libcpp/macro.c
+++ b/libcpp/macro.c
@@ -180,8 +180,8 @@ class vaopt_state {
       {
 	if (m_state == 2 && token->type == CPP_PASTE)
 	  {
-	    cpp_error_at (m_pfile, CPP_DL_ERROR, token->src_loc,
-			  vaopt_paste_error);
+	    /*cpp_error_at (m_pfile, CPP_DL_ERROR, token->src_loc,
+			  vaopt_paste_error);*/
 	    return ERROR;
 	  }
 	/* Advance states before further considering this token, in
@@ -209,8 +209,8 @@ class vaopt_state {
 
 		if (was_paste)
 		  {
-		    cpp_error_at (m_pfile, CPP_DL_ERROR, token->src_loc,
-				  vaopt_paste_error);
+		    /*cpp_error_at (m_pfile, CPP_DL_ERROR, token->src_loc,
+				  vaopt_paste_error);*/
 		    return ERROR;
 		  }
 
@@ -3487,7 +3487,7 @@ create_iso_definition (cpp_reader *pfile)
 	     function-like macros, but not at the end.  */
 	  if (following_paste_op)
 	    {
-	      cpp_error (pfile, CPP_DL_ERROR, paste_op_error_msg);
+	      //cpp_error (pfile, CPP_DL_ERROR, paste_op_error_msg);
 	      goto out;
 	    }
 	  if (!vaopt_tracker.completed ())
@@ -3502,7 +3502,7 @@ create_iso_definition (cpp_reader *pfile)
 	     function-like macros, but not at the beginning.  */
 	  if (macro->count == 1)
 	    {
-	      cpp_error (pfile, CPP_DL_ERROR, paste_op_error_msg);
+	      //cpp_error (pfile, CPP_DL_ERROR, paste_op_error_msg);
 	      goto out;
 	    }
 
